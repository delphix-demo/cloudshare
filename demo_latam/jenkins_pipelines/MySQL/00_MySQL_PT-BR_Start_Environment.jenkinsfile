//
// Pipeline to start Sqlserver FlaskApp Resources
//
// Demo:  PT-BR Localized Demo
//
// 2022 (c) Delphix - Felipe Casali (felipe.casali@delphix.com)
//
pipeline {
   agent { label 'devops' }
   stages {
      stage('enable Sqlserver environments') {
         agent { label 'devops' }
         steps {
            sh "/home/delphix/dxtoolkit2/dx_ctl_env -d democde1 -name 'Sqlserver_Target' -action enable"
            sh "/home/delphix/dxtoolkit2/dx_ctl_env -d democde1 -name 'Sqlserver_Source' -action enable"
            sh "exit 0"
         }
      }
       stage('start Sqlserver DSOURCE') {
         agent { label 'devops' }
         steps {
            sh "/home/delphix/dxtoolkit2/dx_ctl_db -d democde1 -action enable -name 'flaskapp'"
            sh "exit 0"
         }
      }
      stage('start Sqlserver VDBs') {
         agent { label 'devops' }
         steps {
            parallel(
                Start_MASK: {
                      sh "/home/delphix/dxtoolkit2/dx_ctl_db -d democde1 -action enable -name 'flaskapp_mask'"
                      sh "exit 0"
                    }
            )
         }
      }
      stage('configure PTBR app on Source DB') {
        agent { label 'devops' }
        steps {
            sh "docker run --rm --env-file ${DIR}/.env.mssql.prod -p 8081:5000/tcp -v ${DIR}/models-br.yaml:/usr/src/app/models.yaml dcstolf/flask-app-mssql:latest migrations_seed.py"
            sh "docker run --rm --env-file ${DIR}/.env.mssql.prod -p 8081:5000/tcp -v ${DIR}/models-br.yaml:/usr/src/app/models.yaml dcstolf/flask-app-mssql:latest migrations_custom.py"
        }
     }
     stage('Snap Production') {
         agent { label 'devops' }
         steps {
            sh "/home/delphix/dxtoolkit2/dx_snapshot_db -d democde1 -name 'Mysql_master'"
         }
      }
      stage('Refresh MASK') {
         agent { label 'devops' }
         steps {
            sh "/home/delphix/dxtoolkit2/dx_refresh_db -d democde1 -name 'Mysql_MASK'"
         }
      }
     stage('start PT_BR FlaskApp') {
        agent { label 'devops' }
        steps {
            parallel(
               Start_Prod_APP: {
                     sh "docker run -d --env-file ${DIR}/.env.mssql.prod -p 8081:5000/tcp -v ${DIR}/models-br.yaml:/usr/src/app/models.yaml dcstolf/flask-app-mssql:latest"
                   },
               Start_QA_APP: {
                     sh "docker run -d --env-file ${DIR}/.env.mssql.qa -p 8082:5000/tcp -v ${DIR}/models-br.yaml:/usr/src/app/models.yaml dcstolf/flask-app-mssql:latest"
                   },
               Start_DEV_APP: {
                     sh "docker run -d --env-file ${DIR}/.env.mssql.dev -p 8083:5000/tcp -v ${DIR}/models-br.yaml:/usr/src/app/models.yaml dcstolf/flask-app-mssql:latest"
               }
           )
           }
        }
   }
}